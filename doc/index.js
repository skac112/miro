Index.PACKAGES = {"skac" : [], "skac.miro" : [], "skac.miro.segments" : [{"name" : "skac.miro.segments.Cubic", "shortDescription" : "", "members_case class" : [{"label" : "bounds", "tail" : ": Bounds", "member" : "skac.miro.segments.Cubic.bounds", "link" : "skac\/miro\/segments\/Cubic.html#bounds:skac.miro.Bounds", "kind" : "lazy val"}, {"label" : "extrY", "tail" : "(): Set[Point]", "member" : "skac.miro.segments.Cubic.extrY", "link" : "skac\/miro\/segments\/Cubic.html#extrY:Set[skac.miro.Point]", "kind" : "def"}, {"label" : "extrX", "tail" : "(): Set[Point]", "member" : "skac.miro.segments.Cubic.extrX", "link" : "skac\/miro\/segments\/Cubic.html#extrX:Set[skac.miro.Point]", "kind" : "def"}, {"label" : "ptAtParam", "tail" : "(t: Double): <error>", "member" : "skac.miro.segments.Cubic.ptAtParam", "link" : "skac\/miro\/segments\/Cubic.html#ptAtParam(t:Double):<error>", "kind" : "def"}, {"label" : "ptAt", "tail" : "(arcLen: Double): Point", "member" : "skac.miro.segments.Cubic.ptAt", "link" : "skac\/miro\/segments\/Cubic.html#ptAt(arcLen:Double):skac.miro.Point", "kind" : "def"}, {"member" : "skac.miro.segments.Cubic#<init>", "error" : "unsupported entity"}, {"label" : "end", "tail" : ": Point", "member" : "skac.miro.segments.Cubic.end", "link" : "skac\/miro\/segments\/Cubic.html#end:skac.miro.Point", "kind" : "val"}, {"label" : "cp2", "tail" : ": Point", "member" : "skac.miro.segments.Cubic.cp2", "link" : "skac\/miro\/segments\/Cubic.html#cp2:skac.miro.Point", "kind" : "val"}, {"label" : "cp1", "tail" : ": Point", "member" : "skac.miro.segments.Cubic.cp1", "link" : "skac\/miro\/segments\/Cubic.html#cp1:skac.miro.Point", "kind" : "val"}, {"label" : "r", "tail" : "(angle: Double): Segment", "member" : "skac.miro.segments.Segment.r", "link" : "skac\/miro\/segments\/Cubic.html#r(angle:Double):skac.miro.segments.Segment", "kind" : "def"}, {"label" : "t", "tail" : "(trans: Affine): Segment", "member" : "skac.miro.segments.Segment.t", "link" : "skac\/miro\/segments\/Cubic.html#t(trans:skac.miro.transform.Affine):skac.miro.segments.Segment", "kind" : "def"}, {"label" : "doTransform", "tail" : "(trans: Affine): Segment", "member" : "skac.miro.segments.Segment.doTransform", "link" : "skac\/miro\/segments\/Cubic.html#doTransform(trans:skac.miro.transform.Affine):skac.miro.segments.Segment", "kind" : "def"}, {"label" : "closed", "tail" : "(): Boolean", "member" : "skac.miro.Curve.closed", "link" : "skac\/miro\/segments\/Cubic.html#closed:Boolean", "kind" : "def"}, {"label" : "len", "tail" : "(): Double", "member" : "skac.miro.Curve.len", "link" : "skac\/miro\/segments\/Cubic.html#len:Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "skac\/miro\/segments\/Cubic.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "skac\/miro\/segments\/Cubic.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "skac\/miro\/segments\/Cubic.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "skac\/miro\/segments\/Cubic.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "skac\/miro\/segments\/Cubic.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "skac\/miro\/segments\/Cubic.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "skac\/miro\/segments\/Cubic.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "skac\/miro\/segments\/Cubic.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "skac\/miro\/segments\/Cubic.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "skac\/miro\/segments\/Cubic.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "skac\/miro\/segments\/Cubic.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "skac\/miro\/segments\/Cubic.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "skac\/miro\/segments\/Cubic.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "skac\/miro\/segments\/Cubic.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "skac\/miro\/segments\/Cubic.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "skac\/miro\/segments\/Cubic.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "skac\/miro\/segments\/Cubic.html", "kind" : "case class"}]};